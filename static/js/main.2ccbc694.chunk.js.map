{"version":3,"sources":["TodoItem.js","TodoList.js","Footer.js","App.js","index.js"],"names":["TodoItem","id","title","completed","editing","deleteToDo","toggleCompletedClass","toggleEditingClass","editToDo","minutes","seconds","date","defaultProps","clName","useState","editTodoTitle","setEditTodoTitle","fns","includeSeconds","itemDate","setItemDate","itemMinutes","setItemMinutes","itemSeconds","setItemSeconds","timer","setTimer","useEffect","intervalID","setInterval","min","Number","timeTimer","clearInterval","editField","type","className","value","onChange","event","target","onKeyPress","key","formatMin","formatSec","time","onClick","checked","TodoList","todos","map","item","Footer","clearCompletedToDos","setFilter","toDoCount","b1","setB1","b2","setB2","b3","setB3","App","visible","setTodos","todoTitle","setTodoTitle","setMinutes","setSeconds","filter","toggleClassName","array","name","idx","findIndex","slice","doneCount","length","Date","removed","placeholder","autoFocus","max","items","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ccbc694.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as fns from 'date-fns';\n\nexport default function TodoItem({\n  id,\n  title,\n  completed,\n  editing,\n  deleteToDo,\n  toggleCompletedClass,\n  toggleEditingClass,\n  editToDo,\n  minutes,\n  seconds,\n  date,\n}) {\n  TodoItem.defaultProps = {\n    minutes: '0',\n    seconds: '0',\n  };\n\n  TodoItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    editing: PropTypes.bool.isRequired,\n    minutes: PropTypes.string,\n    seconds: PropTypes.string,\n    deleteToDo: PropTypes.func.isRequired,\n    toggleCompletedClass: PropTypes.func.isRequired,\n    toggleEditingClass: PropTypes.func.isRequired,\n    editToDo: PropTypes.func.isRequired,\n    date: PropTypes.string.isRequired,\n  };\n\n  let clName = '';\n  if (completed && !editing) {\n    clName += 'completed';\n  }\n  if (editing && !completed) {\n    clName += 'editing';\n  }\n\n  const [editTodoTitle, setEditTodoTitle] = useState(title);\n  const [itemDate, setItemDate] = useState(fns.formatDistanceToNow(date, { includeSeconds: true }));\n  const [itemMinutes, setItemMinutes] = useState('');\n  const [itemSeconds, setItemSeconds] = useState('');\n  const [timer, setTimer] = useState(false);\n\n  const timeTimer = () => {\n    const min = Number(itemMinutes);\n    const sec = Number(itemSeconds);\n\n    if (sec === 0) {\n      if (min === 0) {\n        setItemMinutes('0');\n        setItemSeconds('0');\n        return;\n      }\n      setItemMinutes((itemMinutes) => {\n        return itemMinutes - 1;\n      });\n      setItemSeconds((itemSeconds) => {\n        return 60;\n      });\n    }\n    setItemSeconds((itemSeconds) => {\n      return itemSeconds - 1;\n    });\n  };\n\n  useEffect(() => {\n    if (minutes || seconds) {\n      setTimer(true);\n      minutes > 59 ? setItemMinutes('59') : setItemMinutes(minutes);\n      seconds > 60 ? setItemSeconds('59') : setItemSeconds(seconds);\n    }\n  }, [minutes, seconds]);\n\n  useEffect(() => {\n    const intervalID = setInterval(() => {\n      setItemDate(fns.formatDistanceToNow(date, { includeSeconds: true }));\n      if (timer) {\n        timeTimer();\n      }\n    }, 1000);\n    return () => clearInterval(intervalID);\n  });\n\n  const editingToDoTitle = (event) => {\n    if (event.key === 'Enter') {\n      editToDo(id, editTodoTitle);\n    }\n  };\n\n  const editField = editing ? (\n    <input\n      type=\"text\"\n      className=\"edit\"\n      value={editTodoTitle}\n      onChange={(event) => setEditTodoTitle(event.target.value)}\n      onKeyPress={editingToDoTitle}\n    />\n  ) : null;\n\n  const formatMin = itemMinutes < 10 ? `0${itemMinutes}` : itemMinutes;\n  const formatSec = itemSeconds < 10 ? `0${itemSeconds}` : itemSeconds;\n\n  const time =\n    itemMinutes || itemSeconds ? (\n      <span className=\"description\">\n        <button\n          className=\"icon icon-play\"\n          onClick={() => {\n            setTimer(true);\n          }}\n          type=\"button\"\n        />\n        <button\n          className=\"icon icon-pause\"\n          onClick={() => {\n            setTimer(false);\n          }}\n          type=\"button\"\n        />\n        {formatMin}:{formatSec}\n      </span>\n    ) : null;\n\n  return (\n    <li className={clName}>\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => {\n            toggleCompletedClass(id);\n            setTimer(!timer);\n          }}\n        />\n        <label>\n          <span className=\"title\">{title}</span>\n          {time}\n          <span className=\"description\">{itemDate}</span>\n        </label>\n        <button className=\"icon icon-edit\" onClick={() => toggleEditingClass(id)} type=\"button\" />\n        <button className=\"icon icon-destroy\" onClick={() => deleteToDo(id)} type=\"button\" />\n      </div>\n      {editField}\n    </li>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nexport default function TodoList({ todos, deleteToDo, toggleCompletedClass, toggleEditingClass, editToDo }) {\n  TodoList.propTypes = {\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n    deleteToDo: PropTypes.func.isRequired,\n    toggleCompletedClass: PropTypes.func.isRequired,\n    toggleEditingClass: PropTypes.func.isRequired,\n    editToDo: PropTypes.func.isRequired,\n  };\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map((item) => (\n        <TodoItem\n          key={item.id}\n          {...item}\n          deleteToDo={deleteToDo}\n          toggleCompletedClass={toggleCompletedClass}\n          toggleEditingClass={toggleEditingClass}\n          editToDo={editToDo}\n        />\n      ))}\n    </ul>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Footer({ clearCompletedToDos, setFilter, toDoCount }) {\n  Footer.defaultProps = {\n    toDoCount: 0,\n  };\n\n  Footer.propTypes = {\n    toDoCount: PropTypes.number,\n    clearCompletedToDos: PropTypes.func.isRequired,\n    setFilter: PropTypes.func.isRequired,\n  };\n\n  const [b1, setB1] = useState('selected');\n  const [b2, setB2] = useState('');\n  const [b3, setB3] = useState('');\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{toDoCount} items left</span>\n      <ul className=\"filters\">\n        <li>\n          <button\n            type=\"button\"\n            className={b1}\n            onClick={() => {\n              setFilter('all');\n              setB1('selected');\n              setB2('');\n              setB3('');\n            }}\n          >\n            All\n          </button>\n        </li>\n        <li>\n          <button\n            type=\"button\"\n            className={b2}\n            onClick={() => {\n              setFilter('active');\n              setB1('');\n              setB2('selected');\n              setB3('');\n            }}\n          >\n            Active\n          </button>\n        </li>\n        <li>\n          <button\n            type=\"button\"\n            className={b3}\n            onClick={() => {\n              setFilter('completed');\n              setB1('');\n              setB2('');\n              setB3('selected');\n            }}\n          >\n            Completed\n          </button>\n        </li>\n      </ul>\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={() => {\n          clearCompletedToDos();\n        }}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n","import React, { useState } from 'react';\nimport TodoList from './TodoList';\nimport Footer from './Footer';\n\nlet id = 1;\n\nexport default function App() {\n  const [todos, setTodos] = useState([]);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [minutes, setMinutes] = useState('');\n  const [seconds, setSeconds] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  const addTodo = (event) => {\n    if (event.key === 'Enter') {\n      setTodos([\n        ...todos,\n        {\n          id: id++,\n          title: todoTitle,\n          minutes: minutes || 0,\n          seconds: seconds || 0,\n          date: new Date(),\n          completed: false,\n          removed: false,\n          editing: false,\n        },\n      ]);\n      setTodoTitle('');\n      setMinutes('');\n      setSeconds('');\n    }\n  };\n\n  const deleteToDo = (id) => {\n    const idx = todos.findIndex((item) => item.id === id);\n    const items = [...todos.slice(0, idx), ...todos.slice(idx + 1)];\n    setTodos((todos) => {\n      return [...items];\n    });\n  };\n\n  const editToDo = (id, title) => {\n    const idx = todos.findIndex((item) => item.id === id);\n    const item = { ...todos[idx], title, editing: false };\n    setTodos((todos) => {\n      return [...todos.slice(0, idx), item, ...todos.slice(idx + 1)];\n    });\n  };\n\n  const toggleClassName = (array, id, name) => {\n    const idx = todos.findIndex((item) => item.id === id);\n    const oldItem = array[idx];\n    const value = !oldItem[name];\n\n    const item = { ...array[idx], [name]: value };\n    return [...array.slice(0, idx), item, ...array.slice(idx + 1)];\n  };\n\n  const toggleCompletedClass = (id) => {\n    setTodos((todos) => {\n      return toggleClassName(todos, id, 'completed');\n    });\n  };\n\n  const toggleEditingClass = (id) => {\n    setTodos((todos) => {\n      return toggleClassName(todos, id, 'editing');\n    });\n  };\n\n  const clearCompletedToDos = () => {\n    const items = todos.filter((item) => !item.completed);\n    setTodos(items);\n  };\n\n  const doneCount = todos.filter((item) => item.completed).length;\n  const toDoCount = todos.length - doneCount;\n  let visible;\n\n  if (filter === 'active') {\n    visible = todos.filter((item) => !item.completed);\n  } else if (filter === 'completed') {\n    visible = todos.filter((item) => item.completed);\n  } else {\n    visible = todos;\n  }\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form className=\"new-todo-form\" onKeyPress={addTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"Task\"\n            value={todoTitle}\n            onChange={(event) => setTodoTitle(event.target.value)}\n            autoFocus\n          />\n          <input\n            className=\"new-todo-form__timer\"\n            placeholder=\"Min\"\n            value={minutes}\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            onChange={(event) => setMinutes(event.target.value)}\n          />\n          <input\n            className=\"new-todo-form__timer\"\n            placeholder=\"Sec\"\n            type=\"number\"\n            value={seconds}\n            min=\"0\"\n            max=\"59\"\n            onChange={(event) => setSeconds(event.target.value)}\n          />\n        </form>\n      </header>\n      <section className=\"main\">\n        <TodoList\n          todos={visible}\n          deleteToDo={deleteToDo}\n          toggleCompletedClass={toggleCompletedClass}\n          toggleEditingClass={toggleEditingClass}\n          editToDo={editToDo}\n        />\n        <Footer clearCompletedToDos={clearCompletedToDos} setFilter={setFilter} toDoCount={toDoCount} />\n      </section>\n    </section>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}